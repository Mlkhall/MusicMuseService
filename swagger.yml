openapi: 3.0.3
info:
  title: MusicMuse REST API
  version: 2024.10.06-1
  description: API for MusicMuse project
paths:
  /api/auth/:
    post:
      operationId: auth_create
      tags:
      - auth
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AuthTokenRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AuthTokenRequest'
          application/json:
            schema:
              $ref: '#/components/schemas/AuthTokenRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthToken'
          description: ''
  /api/v1/albums/:
    get:
      operationId: v1_albums_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - Альбомы
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAlbumsList'
          description: ''
    post:
      operationId: v1_albums_create
      tags:
      - Альбомы
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlbumsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AlbumsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AlbumsRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Albums'
          description: ''
  /api/v1/albums/{id}/:
    get:
      operationId: v1_albums_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this albums.
        required: true
      tags:
      - Альбомы
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Albums'
          description: ''
    put:
      operationId: v1_albums_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this albums.
        required: true
      tags:
      - Альбомы
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AlbumsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AlbumsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AlbumsRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Albums'
          description: ''
    patch:
      operationId: v1_albums_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this albums.
        required: true
      tags:
      - Альбомы
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAlbumsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAlbumsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAlbumsRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Albums'
          description: ''
    delete:
      operationId: v1_albums_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this albums.
        required: true
      tags:
      - Альбомы
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/artists/:
    get:
      operationId: v1_artists_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - Артисты
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedArtistsList'
          description: ''
    post:
      operationId: v1_artists_create
      tags:
      - Артисты
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArtistsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ArtistsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ArtistsRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artists'
          description: ''
  /api/v1/artists/{id}/:
    get:
      operationId: v1_artists_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this artists.
        required: true
      tags:
      - Артисты
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artists'
          description: ''
    put:
      operationId: v1_artists_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this artists.
        required: true
      tags:
      - Артисты
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArtistsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ArtistsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ArtistsRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artists'
          description: ''
    patch:
      operationId: v1_artists_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this artists.
        required: true
      tags:
      - Артисты
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedArtistsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedArtistsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedArtistsRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Artists'
          description: ''
    delete:
      operationId: v1_artists_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this artists.
        required: true
      tags:
      - Артисты
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/audio/:
    get:
      operationId: v1_audio_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - Контент
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAudioList'
          description: ''
    post:
      operationId: v1_audio_create
      tags:
      - Контент
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AudioRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AudioRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AudioRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Audio'
          description: ''
  /api/v1/audio/{id}/:
    get:
      operationId: v1_audio_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this audio.
        required: true
      tags:
      - Контент
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Audio'
          description: ''
    put:
      operationId: v1_audio_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this audio.
        required: true
      tags:
      - Контент
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AudioRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AudioRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AudioRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Audio'
          description: ''
    patch:
      operationId: v1_audio_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this audio.
        required: true
      tags:
      - Контент
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAudioRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAudioRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAudioRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Audio'
          description: ''
    delete:
      operationId: v1_audio_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this audio.
        required: true
      tags:
      - Контент
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/genres/:
    get:
      operationId: v1_genres_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - Жанры
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGenresList'
          description: ''
    post:
      operationId: v1_genres_create
      tags:
      - Жанры
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenresRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GenresRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GenresRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Genres'
          description: ''
  /api/v1/genres/{id}/:
    get:
      operationId: v1_genres_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this genres.
        required: true
      tags:
      - Жанры
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Genres'
          description: ''
    put:
      operationId: v1_genres_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this genres.
        required: true
      tags:
      - Жанры
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenresRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GenresRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GenresRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Genres'
          description: ''
    patch:
      operationId: v1_genres_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this genres.
        required: true
      tags:
      - Жанры
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGenresRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGenresRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGenresRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Genres'
          description: ''
    delete:
      operationId: v1_genres_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this genres.
        required: true
      tags:
      - Жанры
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/images/:
    get:
      operationId: v1_images_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - Контент
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedImagesList'
          description: ''
    post:
      operationId: v1_images_create
      tags:
      - Контент
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImagesRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ImagesRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ImagesRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Images'
          description: ''
  /api/v1/images/{id}/:
    get:
      operationId: v1_images_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this images.
        required: true
      tags:
      - Контент
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Images'
          description: ''
    put:
      operationId: v1_images_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this images.
        required: true
      tags:
      - Контент
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ImagesRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ImagesRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ImagesRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Images'
          description: ''
    patch:
      operationId: v1_images_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this images.
        required: true
      tags:
      - Контент
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedImagesRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedImagesRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedImagesRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Images'
          description: ''
    delete:
      operationId: v1_images_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this images.
        required: true
      tags:
      - Контент
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/labels/:
    get:
      operationId: v1_labels_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - Лейблы
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLabelsList'
          description: ''
    post:
      operationId: v1_labels_create
      tags:
      - Лейблы
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabelsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LabelsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LabelsRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Labels'
          description: ''
  /api/v1/labels/{id}/:
    get:
      operationId: v1_labels_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this labels.
        required: true
      tags:
      - Лейблы
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Labels'
          description: ''
    put:
      operationId: v1_labels_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this labels.
        required: true
      tags:
      - Лейблы
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LabelsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LabelsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LabelsRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Labels'
          description: ''
    patch:
      operationId: v1_labels_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this labels.
        required: true
      tags:
      - Лейблы
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLabelsRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLabelsRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLabelsRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Labels'
          description: ''
    delete:
      operationId: v1_labels_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this labels.
        required: true
      tags:
      - Лейблы
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/tracks/:
    get:
      operationId: v1_tracks_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - Треки
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTracksList'
          description: ''
    post:
      operationId: v1_tracks_create
      tags:
      - Треки
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TracksRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TracksRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TracksRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tracks'
          description: ''
  /api/v1/tracks/{id}/:
    get:
      operationId: v1_tracks_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this tracks.
        required: true
      tags:
      - Треки
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tracks'
          description: ''
    put:
      operationId: v1_tracks_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this tracks.
        required: true
      tags:
      - Треки
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TracksRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TracksRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TracksRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tracks'
          description: ''
    patch:
      operationId: v1_tracks_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this tracks.
        required: true
      tags:
      - Треки
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedTracksRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedTracksRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedTracksRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tracks'
          description: ''
    delete:
      operationId: v1_tracks_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this tracks.
        required: true
      tags:
      - Треки
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/video/:
    get:
      operationId: v1_video_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - Контент
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedVideoList'
          description: ''
    post:
      operationId: v1_video_create
      tags:
      - Контент
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VideoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VideoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VideoRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
          description: ''
  /api/v1/video/{id}/:
    get:
      operationId: v1_video_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this video.
        required: true
      tags:
      - Контент
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
          description: ''
    put:
      operationId: v1_video_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this video.
        required: true
      tags:
      - Контент
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VideoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VideoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VideoRequest'
        required: true
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
          description: ''
    patch:
      operationId: v1_video_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this video.
        required: true
      tags:
      - Контент
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedVideoRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedVideoRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedVideoRequest'
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Video'
          description: ''
    delete:
      operationId: v1_video_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this video.
        required: true
      tags:
      - Контент
      security:
      - cookieAuth: []
      - basicAuth: []
      responses:
        '204':
          description: No response body
components:
  schemas:
    Albums:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          title: Время создания
        updated:
          type: string
          format: date-time
          readOnly: true
          title: Время обновления
        name:
          type: string
          title: Название
          maxLength: 255
        slug:
          type: string
          readOnly: true
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
          nullable: true
          title: Описание
        release_date:
          type: string
          format: date
          title: Дата выхода
        cover_image:
          type: integer
          title: Изображение
        labels:
          type: array
          items:
            type: integer
            title: Лейблы
          title: Лейблы
        artists:
          type: array
          items:
            type: integer
            title: Исполнители
          title: Исполнители
        genres:
          type: array
          items:
            type: integer
            title: Жанры
          title: Жанры
      required:
      - artists
      - cover_image
      - created
      - genres
      - id
      - labels
      - name
      - release_date
      - slug
      - updated
    AlbumsRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          title: Название
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Описание
        release_date:
          type: string
          format: date
          title: Дата выхода
        cover_image:
          type: integer
          title: Изображение
        labels:
          type: array
          items:
            type: integer
            title: Лейблы
          title: Лейблы
        artists:
          type: array
          items:
            type: integer
            title: Исполнители
          title: Исполнители
        genres:
          type: array
          items:
            type: integer
            title: Жанры
          title: Жанры
      required:
      - artists
      - cover_image
      - genres
      - labels
      - name
      - release_date
    Artists:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          title: Время создания
        updated:
          type: string
          format: date-time
          readOnly: true
          title: Время обновления
        name:
          type: string
          title: Название
          maxLength: 255
        slug:
          type: string
          readOnly: true
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
          nullable: true
          title: Описание
        bio:
          type: string
          title: Биография
        birth_date:
          type: string
          format: date
          title: Дата рождения
        country:
          allOf:
          - $ref: '#/components/schemas/CountryEnum'
          title: Страна
        label:
          type: integer
          title: Лейбл
        avatar:
          type: integer
          nullable: true
          title: Изображение
        genres:
          type: array
          items:
            type: integer
            title: Жанры
          title: Жанры
      required:
      - bio
      - birth_date
      - created
      - genres
      - id
      - label
      - name
      - slug
      - updated
    ArtistsRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          title: Название
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Описание
        bio:
          type: string
          minLength: 1
          title: Биография
        birth_date:
          type: string
          format: date
          title: Дата рождения
        country:
          allOf:
          - $ref: '#/components/schemas/CountryEnum'
          title: Страна
        label:
          type: integer
          title: Лейбл
        avatar:
          type: integer
          nullable: true
          title: Изображение
        genres:
          type: array
          items:
            type: integer
            title: Жанры
          title: Жанры
      required:
      - bio
      - birth_date
      - genres
      - label
      - name
    Audio:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        description:
          type: string
          default: ''
        created:
          type: string
          format: date-time
          readOnly: true
          title: Время создания
        updated:
          type: string
          format: date-time
          readOnly: true
          title: Время обновления
        name:
          type: string
          title: Название
          maxLength: 255
        slug:
          type: string
          readOnly: true
          pattern: ^[-a-zA-Z0-9_]+$
        transcription:
          type: string
          nullable: true
          title: Текст песни
        duration:
          type: string
          readOnly: true
          nullable: true
          title: Длительность
        audio:
          type: string
          format: uri
          title: Ссылка на аудио
      required:
      - audio
      - created
      - duration
      - id
      - name
      - slug
      - updated
    AudioRequest:
      type: object
      properties:
        description:
          type: string
          minLength: 1
          default: ''
        name:
          type: string
          minLength: 1
          title: Название
          maxLength: 255
        transcription:
          type: string
          nullable: true
          title: Текст песни
        audio:
          type: string
          format: binary
          title: Ссылка на аудио
      required:
      - audio
      - name
    AuthToken:
      type: object
      properties:
        token:
          type: string
          readOnly: true
          title: Токен
      required:
      - token
    AuthTokenRequest:
      type: object
      properties:
        username:
          type: string
          writeOnly: true
          minLength: 1
          title: Имя пользователя
        password:
          type: string
          writeOnly: true
          minLength: 1
          title: Пароль
      required:
      - password
      - username
    CountryEnum:
      enum:
      - AU
      - AT
      - AZ
      - AX
      - AL
      - DZ
      - AS
      - AI
      - AO
      - AD
      - AQ
      - AG
      - AR
      - AM
      - AW
      - AF
      - BS
      - BD
      - BB
      - BH
      - BY
      - BZ
      - BE
      - BJ
      - BM
      - BG
      - BO
      - BQ
      - BA
      - BW
      - BR
      - IO
      - BN
      - BF
      - BI
      - BT
      - VU
      - GB
      - HU
      - VE
      - VG
      - VI
      - UM
      - VN
      - GA
      - HT
      - GY
      - GM
      - GH
      - GP
      - GT
      - GN
      - GW
      - DE
      - GG
      - GI
      - HN
      - HK
      - GD
      - GL
      - GR
      - GE
      - GU
      - DK
      - JE
      - DJ
      - DM
      - DO
      - EG
      - ZM
      - EH
      - ZW
      - IL
      - IN
      - ID
      - JO
      - IQ
      - IR
      - IE
      - IS
      - ES
      - IT
      - YE
      - CV
      - KZ
      - KY
      - KH
      - CM
      - CA
      - QA
      - KE
      - CY
      - KG
      - KI
      - CN
      - CC
      - CO
      - KM
      - CG
      - CD
      - CR
      - CI
      - CU
      - KW
      - CW
      - LA
      - LV
      - LS
      - LR
      - LB
      - LY
      - LT
      - LI
      - LU
      - MU
      - MR
      - MG
      - YT
      - MO
      - MW
      - MY
      - ML
      - MV
      - MT
      - MA
      - MQ
      - MH
      - MX
      - FM
      - MZ
      - MD
      - MC
      - MN
      - MS
      - MM
      - NA
      - NR
      - NP
      - NE
      - NG
      - NL
      - NI
      - NU
      - NZ
      - NC
      - 'NO'
      - AE
      - OM
      - BV
      - IM
      - NF
      - CX
      - HM
      - CK
      - TC
      - PK
      - PW
      - PS
      - PA
      - PG
      - PY
      - PE
      - PN
      - PL
      - PT
      - PR
      - RE
      - RU
      - RW
      - RO
      - SV
      - WS
      - SM
      - ST
      - SA
      - SX
      - MF
      - SH
      - VA
      - KP
      - MK
      - MP
      - SC
      - BL
      - PM
      - SN
      - VC
      - KN
      - LC
      - RS
      - SG
      - SY
      - SK
      - SI
      - US
      - SB
      - SO
      - SD
      - SR
      - SL
      - TJ
      - TH
      - TW
      - TZ
      - TL
      - TG
      - TK
      - TO
      - TT
      - TV
      - TN
      - TM
      - TR
      - UG
      - UZ
      - UA
      - WF
      - UY
      - FO
      - FJ
      - PH
      - FI
      - FK
      - FR
      - GF
      - PF
      - TF
      - HR
      - CF
      - TD
      - ME
      - CZ
      - CL
      - CH
      - SE
      - SJ
      - LK
      - EC
      - GQ
      - ER
      - SZ
      - EE
      - ET
      - ZA
      - GS
      - KR
      - SS
      - JM
      - JP
      type: string
      description: |-
        * `AU` - Австралия
        * `AT` - Австрия
        * `AZ` - Азербайджан
        * `AX` - Аландские острова
        * `AL` - Албания
        * `DZ` - Алжир
        * `AS` - Американское Самоа
        * `AI` - Ангилья
        * `AO` - Ангола
        * `AD` - Андорра
        * `AQ` - Антарктида
        * `AG` - Антигуа и Барбуда
        * `AR` - Аргентина
        * `AM` - Армения
        * `AW` - Аруба
        * `AF` - Афганистан
        * `BS` - Багамские острова
        * `BD` - Бангладеш
        * `BB` - Барбадос
        * `BH` - Бахрейн
        * `BY` - Беларусь
        * `BZ` - Белиз
        * `BE` - Бельгия
        * `BJ` - Бенин
        * `BM` - Бермудские острова
        * `BG` - Болгария
        * `BO` - Боливия
        * `BQ` - Бонайре, Синт-Эстатиус и Саба
        * `BA` - Босния и Герцеговина
        * `BW` - Ботсвана
        * `BR` - Бразилия
        * `IO` - Британская территория в Индийском океане
        * `BN` - Бруней
        * `BF` - Буркина-Фасо
        * `BI` - Бурунди
        * `BT` - Бутан
        * `VU` - Вануату
        * `GB` - Великобритания
        * `HU` - Венгрия
        * `VE` - Венесуэла
        * `VG` - Виргинские Острова (Британские)
        * `VI` - Виргинские Острова (США)
        * `UM` - Внешние малые острова США
        * `VN` - Вьетнам
        * `GA` - Габон
        * `HT` - Гаити
        * `GY` - Гайана
        * `GM` - Гамбия
        * `GH` - Гана
        * `GP` - Гваделупа
        * `GT` - Гватемала
        * `GN` - Гвинея
        * `GW` - Гвинея-Бисау
        * `DE` - Германия
        * `GG` - Гернси
        * `GI` - Гибралтар
        * `HN` - Гондурас
        * `HK` - Гонконг
        * `GD` - Гренада
        * `GL` - Гренландия
        * `GR` - Греция
        * `GE` - Грузия
        * `GU` - Гуам
        * `DK` - Дания
        * `JE` - Джерси
        * `DJ` - Джибути
        * `DM` - Доминика
        * `DO` - Доминиканская Республика
        * `EG` - Египет
        * `ZM` - Замбия
        * `EH` - Западная Сахара
        * `ZW` - Зимбабве
        * `IL` - Израиль
        * `IN` - Индия
        * `ID` - Индонезия
        * `JO` - Иордания
        * `IQ` - Ирак
        * `IR` - Иран
        * `IE` - Ирландия
        * `IS` - Исландия
        * `ES` - Испания
        * `IT` - Италия
        * `YE` - Йемен
        * `CV` - Кабо-Верде
        * `KZ` - Казахстан
        * `KY` - Каймановы острова
        * `KH` - Камбоджа
        * `CM` - Камерун
        * `CA` - Канада
        * `QA` - Катар
        * `KE` - Кения
        * `CY` - Кипр
        * `KG` - Киргизия
        * `KI` - Кирибати
        * `CN` - Китай
        * `CC` - Кокосовые (Килинг) острова
        * `CO` - Колумбия
        * `KM` - Коморские острова
        * `CG` - Конго
        * `CD` - Конго (Демократическая Республика)
        * `CR` - Коста-Рика
        * `CI` - Кот-д'Ивуар
        * `CU` - Куба
        * `KW` - Кувейт
        * `CW` - Кюрасао
        * `LA` - Лаос
        * `LV` - Латвия
        * `LS` - Лесото
        * `LR` - Либерии
        * `LB` - Ливан
        * `LY` - Ливия
        * `LT` - Литва
        * `LI` - Лихтенштейн
        * `LU` - Люксембург
        * `MU` - Маврикий
        * `MR` - Мавритания
        * `MG` - Мадагаскар
        * `YT` - Майотта
        * `MO` - Макао
        * `MW` - Малави
        * `MY` - Малайзия
        * `ML` - Мали
        * `MV` - Мальдивы
        * `MT` - Мальта
        * `MA` - Марокко
        * `MQ` - Мартиника
        * `MH` - Маршалловы острова
        * `MX` - Мексика
        * `FM` - Микронезия (Федеративные Штаты)
        * `MZ` - Мозамбик
        * `MD` - Молдова
        * `MC` - Монако
        * `MN` - Монголия
        * `MS` - Монтсеррат
        * `MM` - Мьянмы
        * `NA` - Намибия
        * `NR` - Науру
        * `NP` - Непал
        * `NE` - Нигер
        * `NG` - Нигерия
        * `NL` - Нидерланды
        * `NI` - Никарагуа
        * `NU` - Ниуэ
        * `NZ` - Новая Зеландия
        * `NC` - Новой Каледонии
        * `NO` - Норвегия
        * `AE` - Объединенные Арабские Эмираты
        * `OM` - Оман
        * `BV` - Остров Буве
        * `IM` - Остров Мэн
        * `NF` - Остров Норфолк
        * `CX` - Остров Рождества
        * `HM` - Остров Херд и Острова Макдоналд
        * `CK` - Острова Кука
        * `TC` - Острова Теркс и Кайкос
        * `PK` - Пакистан
        * `PW` - Палау
        * `PS` - Палестина, Государство
        * `PA` - Панама
        * `PG` - Папуа-Новая Гвинея
        * `PY` - Парагвай
        * `PE` - Перу
        * `PN` - Питкэрн
        * `PL` - Польша
        * `PT` - Португалия
        * `PR` - Пуэрто-Рико
        * `RE` - Реюньон
        * `RU` - Россия
        * `RW` - Руанда
        * `RO` - Румыния
        * `SV` - Сальвадор
        * `WS` - Самоа
        * `SM` - Сан - Марино
        * `ST` - Сан-Томе и Принсипи
        * `SA` - Саудовская Аравия
        * `SX` - Святого Мартина (Остров, нидерландская часть)
        * `MF` - Святого Мартина (Остров, французская часть)
        * `SH` - Святой Елены, Вознесения и Тристан-да-Кунья (Острова)
        * `VA` - Святой Престол
        * `KP` - Северная Корея
        * `MK` - Северная Македония
        * `MP` - Северные Марианские острова
        * `SC` - Сейшельские острова
        * `BL` - Сен-Бартельми
        * `PM` - Сен-Пьер и Микелон
        * `SN` - Сенегал
        * `VC` - Сент-Винсент и Гренадины
        * `KN` - Сент-Китс и Невис
        * `LC` - Сент-Люсия
        * `RS` - Сербия
        * `SG` - Сингапур
        * `SY` - Сирия
        * `SK` - Словакия
        * `SI` - Словения
        * `US` - Соединенные Штаты Америки
        * `SB` - Соломоновы Острова
        * `SO` - Сомали
        * `SD` - Судан
        * `SR` - Суринам
        * `SL` - Сьерра-Леоне
        * `TJ` - Таджикистан
        * `TH` - Таиланд
        * `TW` - Тайвань
        * `TZ` - Танзания
        * `TL` - Тимор-Лесте
        * `TG` - Того
        * `TK` - Токелау
        * `TO` - Тонга
        * `TT` - Тринидад и Тобаго
        * `TV` - Тувалу
        * `TN` - Тунис
        * `TM` - Туркменистан
        * `TR` - Турция
        * `UG` - Уганда
        * `UZ` - Узбекистан
        * `UA` - Украина
        * `WF` - Уоллис и Футуна
        * `UY` - Уругвай
        * `FO` - Фарерские острова
        * `FJ` - Фиджи
        * `PH` - Филиппины
        * `FI` - Финляндия
        * `FK` - Фолклендские (Мальвинские) острова
        * `FR` - Франция
        * `GF` - Французская Гвиана
        * `PF` - Французская Полинезия
        * `TF` - Французские южные территории
        * `HR` - Хорватия
        * `CF` - Центральноафриканская Республика
        * `TD` - Чад
        * `ME` - Черногория
        * `CZ` - Чехия
        * `CL` - Чили
        * `CH` - Швейцария
        * `SE` - Швеция
        * `SJ` - Шпицберген и Ян-Майен
        * `LK` - Шри-Ланка
        * `EC` - Эквадор
        * `GQ` - Экваториальная Гвинея
        * `ER` - Эритрея
        * `SZ` - Эсватини
        * `EE` - Эстония
        * `ET` - Эфиопия
        * `ZA` - Южная Африка
        * `GS` - Южная Георгия и Южные Сандвичевы острова
        * `KR` - Южная Корея
        * `SS` - Южный Судан
        * `JM` - Ямайка
        * `JP` - Япония
    Genres:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        slug:
          type: string
          readOnly: true
          pattern: ^[-a-zA-Z0-9_]+$
        created:
          type: string
          format: date-time
          readOnly: true
          title: Время создания
        updated:
          type: string
          format: date-time
          readOnly: true
          title: Время обновления
        name:
          type: string
          title: Название
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Описание
        cover_image:
          type: integer
          nullable: true
          title: Изображение
      required:
      - created
      - id
      - name
      - slug
      - updated
    GenresRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          title: Название
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Описание
        cover_image:
          type: integer
          nullable: true
          title: Изображение
      required:
      - name
    Images:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        description:
          type: string
          default: ''
        created:
          type: string
          format: date-time
          readOnly: true
          title: Время создания
        updated:
          type: string
          format: date-time
          readOnly: true
          title: Время обновления
        name:
          type: string
          title: Название
          maxLength: 255
        slug:
          type: string
          readOnly: true
          pattern: ^[-a-zA-Z0-9_]+$
        image:
          type: string
          format: uri
          title: Ссылка на изображение
        image_width:
          type: integer
          readOnly: true
          nullable: true
          title: Ширина изображения
        image_height:
          type: integer
          readOnly: true
          nullable: true
          title: Высота изображения
      required:
      - created
      - id
      - image_height
      - image_width
      - name
      - slug
      - updated
    ImagesRequest:
      type: object
      properties:
        description:
          type: string
          minLength: 1
          default: ''
        name:
          type: string
          minLength: 1
          title: Название
          maxLength: 255
        image:
          type: string
          format: binary
          title: Ссылка на изображение
      required:
      - name
    Labels:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          title: Время создания
        updated:
          type: string
          format: date-time
          readOnly: true
          title: Время обновления
        name:
          type: string
          title: Название
          maxLength: 255
        slug:
          type: string
          readOnly: true
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
          nullable: true
          title: Описание
        cover_image:
          type: integer
          nullable: true
          title: Изображение
      required:
      - created
      - id
      - name
      - slug
      - updated
    LabelsRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          title: Название
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Описание
        cover_image:
          type: integer
          nullable: true
          title: Изображение
      required:
      - name
    PaginatedAlbumsList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Albums'
    PaginatedArtistsList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Artists'
    PaginatedAudioList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Audio'
    PaginatedGenresList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Genres'
    PaginatedImagesList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Images'
    PaginatedLabelsList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Labels'
    PaginatedTracksList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Tracks'
    PaginatedVideoList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Video'
    PatchedAlbumsRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          title: Название
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Описание
        release_date:
          type: string
          format: date
          title: Дата выхода
        cover_image:
          type: integer
          title: Изображение
        labels:
          type: array
          items:
            type: integer
            title: Лейблы
          title: Лейблы
        artists:
          type: array
          items:
            type: integer
            title: Исполнители
          title: Исполнители
        genres:
          type: array
          items:
            type: integer
            title: Жанры
          title: Жанры
    PatchedArtistsRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          title: Название
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Описание
        bio:
          type: string
          minLength: 1
          title: Биография
        birth_date:
          type: string
          format: date
          title: Дата рождения
        country:
          allOf:
          - $ref: '#/components/schemas/CountryEnum'
          title: Страна
        label:
          type: integer
          title: Лейбл
        avatar:
          type: integer
          nullable: true
          title: Изображение
        genres:
          type: array
          items:
            type: integer
            title: Жанры
          title: Жанры
    PatchedAudioRequest:
      type: object
      properties:
        description:
          type: string
          minLength: 1
          default: ''
        name:
          type: string
          minLength: 1
          title: Название
          maxLength: 255
        transcription:
          type: string
          nullable: true
          title: Текст песни
        audio:
          type: string
          format: binary
          title: Ссылка на аудио
    PatchedGenresRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          title: Название
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Описание
        cover_image:
          type: integer
          nullable: true
          title: Изображение
    PatchedImagesRequest:
      type: object
      properties:
        description:
          type: string
          minLength: 1
          default: ''
        name:
          type: string
          minLength: 1
          title: Название
          maxLength: 255
        image:
          type: string
          format: binary
          title: Ссылка на изображение
    PatchedLabelsRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          title: Название
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Описание
        cover_image:
          type: integer
          nullable: true
          title: Изображение
    PatchedTracksRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          title: Название
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Описание
        album:
          type: integer
          title: Альбом
        label:
          type: integer
          title: Лейбл
        cover_image:
          type: integer
          title: Изображение
        track:
          type: integer
          title: Трек
        artists:
          type: array
          items:
            type: integer
            title: Исполнители
          title: Исполнители
        genres:
          type: array
          items:
            type: integer
            title: Жанры
          title: Жанры
    PatchedVideoRequest:
      type: object
      properties:
        description:
          type: string
          minLength: 1
          default: ''
        name:
          type: string
          minLength: 1
          title: Название
          maxLength: 255
        video:
          type: string
          format: binary
          title: Ссылка на видео
    Tracks:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
          title: Время создания
        updated:
          type: string
          format: date-time
          readOnly: true
          title: Время обновления
        name:
          type: string
          title: Название
          maxLength: 255
        slug:
          type: string
          readOnly: true
          pattern: ^[-a-zA-Z0-9_]+$
        description:
          type: string
          nullable: true
          title: Описание
        album:
          type: integer
          title: Альбом
        label:
          type: integer
          title: Лейбл
        cover_image:
          type: integer
          title: Изображение
        track:
          type: integer
          title: Трек
        artists:
          type: array
          items:
            type: integer
            title: Исполнители
          title: Исполнители
        genres:
          type: array
          items:
            type: integer
            title: Жанры
          title: Жанры
      required:
      - album
      - artists
      - cover_image
      - created
      - genres
      - id
      - label
      - name
      - slug
      - track
      - updated
    TracksRequest:
      type: object
      properties:
        name:
          type: string
          minLength: 1
          title: Название
          maxLength: 255
        description:
          type: string
          nullable: true
          title: Описание
        album:
          type: integer
          title: Альбом
        label:
          type: integer
          title: Лейбл
        cover_image:
          type: integer
          title: Изображение
        track:
          type: integer
          title: Трек
        artists:
          type: array
          items:
            type: integer
            title: Исполнители
          title: Исполнители
        genres:
          type: array
          items:
            type: integer
            title: Жанры
          title: Жанры
      required:
      - album
      - artists
      - cover_image
      - genres
      - label
      - name
      - track
    Video:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        description:
          type: string
          default: ''
        created:
          type: string
          format: date-time
          readOnly: true
          title: Время создания
        updated:
          type: string
          format: date-time
          readOnly: true
          title: Время обновления
        name:
          type: string
          title: Название
          maxLength: 255
        slug:
          type: string
          readOnly: true
          pattern: ^[-a-zA-Z0-9_]+$
        duration:
          type: string
          readOnly: true
          nullable: true
          title: Длительность
        video:
          type: string
          format: uri
          title: Ссылка на видео
      required:
      - created
      - duration
      - id
      - name
      - slug
      - updated
      - video
    VideoRequest:
      type: object
      properties:
        description:
          type: string
          minLength: 1
          default: ''
        name:
          type: string
          minLength: 1
          title: Название
          maxLength: 255
        video:
          type: string
          format: binary
          title: Ссылка на видео
      required:
      - name
      - video
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
